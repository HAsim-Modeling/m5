////////////////////////////////////////////////////////////////////
//
// Output include file directives.
//

output header {{
#include <cstring>
#include <sstream>
#include <iostream>

#include "arch/sparc/faults.hh"
#include "arch/sparc/isa_traits.hh"
#include "arch/sparc/regfile.hh"
#include "base/condcodes.hh"
#include "base/misc.hh"
#include "cpu/static_inst.hh"
#include "mem/packet.hh"
#include "mem/request.hh"  // some constructors use MemReq flags
}};

output decoder {{
#include "base/cprintf.hh"
#include "base/loader/symtab.hh"
#include "cpu/thread_context.hh"  // for Jump::branchTarget()
#include "mem/packet.hh"

#include "base/fenv.hh"
#include <algorithm>

using namespace SparcISA;
}};

output exec {{
#include "base/fenv.hh"

#if FULL_SYSTEM
#include "sim/pseudo_inst.hh"
#endif

#include <limits>

#include <cmath>
#include "arch/sparc/asi.hh"
#include "base/bigint.hh"
#include "cpu/base.hh"
#include "cpu/exetrace.hh"
#include "sim/sim_exit.hh"
#include "mem/packet.hh"
#include "mem/packet_access.hh"

using namespace SparcISA;
using namespace std;
}};

