# -*- mode:python -*-

# Copyright (c) 2004, 2005, 2006
# The Regents of The University of Michigan
# All Rights Reserved
#
# This code is part of the M5 simulator.
#
# Permission is granted to use, copy, create derivative works and
# redistribute this software and such derivative works for any
# purpose, so long as the copyright notice above, this grant of
# permission, and the disclaimer below appear in all copies made; and
# so long as the name of The University of Michigan is not used in any
# advertising or publicity pertaining to the use or distribution of
# this software without specific, written prior authorization.
#
# THIS SOFTWARE IS PROVIDED AS IS, WITHOUT REPRESENTATION FROM THE
# UNIVERSITY OF MICHIGAN AS TO ITS FITNESS FOR ANY PURPOSE, AND
# WITHOUT WARRANTY BY THE UNIVERSITY OF MICHIGAN OF ANY KIND, EITHER
# EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE. THE REGENTS OF THE UNIVERSITY OF MICHIGAN SHALL NOT BE
# LIABLE FOR ANY DAMAGES, INCLUDING DIRECT, SPECIAL, INDIRECT,
# INCIDENTAL, OR CONSEQUENTIAL DAMAGES, WITH RESPECT TO ANY CLAIM
# ARISING OUT OF OR IN CONNECTION WITH THE USE OF THE SOFTWARE, EVEN
# IF IT HAS BEEN OR IS HEREAFTER ADVISED OF THE POSSIBILITY OF SUCH
# DAMAGES.
#
# Authors: Gabe M. Black
#          Steven K. Reinhardt
#          Korey L. Sewell

Import('*')

if env['TARGET_ISA'] == 'mips':
    Source('faults.cc')
    Source('regfile/int_regfile.cc')
    Source('regfile/float_regfile.cc')
    Source('regfile/misc_regfile.cc')
    Source('regfile/regfile.cc')
    Source('tlb.cc')
    Source('pagetable.cc')
    Source('utility.cc')
    Source('dsp.cc')

    SimObject('MipsTLB.py')
    TraceFlag('MipsPRA')

    if env['FULL_SYSTEM']:
	SimObject('MipsSystem.py')
        Source('idle_event.cc')
        Source('mips_core_specific.cc')
        Source('vtophys.cc')
        Source('system.cc')
        Source('stacktrace.cc')
        Source('linux/system.cc')
	Source('interrupts.cc')
        Source('bare_iron/system.cc')
    else:
        Source('process.cc')
        Source('linux/linux.cc')
        Source('linux/process.cc')

    # Add in files generated by the ISA description.
    isa_desc_files = env.ISADesc('isa/main.isa')
    # Only non-header files need to be compiled.
    for f in isa_desc_files:
        if not f.path.endswith('.hh'):
            Source(f)
